#+STARTUP: showeverything
* Intro
  This is my master .org config file

* Configuration
** Package management
*** Setup package archives
   #+begin_src emacs-lisp
     (require 'package)
     (setq package-enable-at-startup nil)
     (setq package-archives '(("melpa"     . "https://melpa.org/packages/")
			      ("org"       . "http://orgmode.org/elpa/")
			      ("gnu"       . "http://elpa.gnu.org/packages/")))
     (package-initialize)		    
   #+end_src

*** Configure use-package
    #+begin_src emacs-lisp
      (unless (package-installed-p 'use-package)
	(package-refresh-contents)
	(package-install 'use-package))

      (eval-when-compile
	(require 'use-package))
      (require 'use-package-ensure)
      (setq use-package-always-ensure t)
    #+end_src
** General settings
*** Core
    Move customizations into a seperate file, to keep init.el tidy.
    #+begin_src emacs-lisp
      (setq custom-file "~/.emacs.d/custom.el")
      (unless (file-exists-p custom-file)
	(with-temp-buffer
	  (write-file custom-file)))
      (load custom-file)
    #+end_src
    Disable any auto-saving and backup files
    #+begin_src emacs-lisp
      (setq make-backup-files nil)
      (setq auto-save-default nil)
    #+end_src
    No yes-or-no questions
    #+begin_src emacs-lisp
      (defalias 'yes-or-no-p 'y-or-n-p)
    #+end_src
    
*** Visual
     Remove menubar, scrollbar, and more distracting GUI elements
     #+begin_src emacs-lisp
       (setq inhibit-startup-screen t)
       (tool-bar-mode -1)
       (toggle-scroll-bar -1)
       (menu-bar-mode -1)
     #+end_src
     Highlight matching parentheses and only those
     #+begin_src emacs-lisp
       (show-paren-mode 1)
       (setq show-paren-style 'parenthesis)
     #+end_src
**** Themeing
     Set the theme, I really like the spacemacs theme
     #+begin_src emacs-lisp
       (use-package spacemacs-common
	 :ensure spacemacs-theme
	 :init
	 (setq spacemacs-theme-org-height nil)
	 :config
	 (load-theme 'spacemacs-dark t))
     #+end_src
     Also use the powerline-based modeline of spacemacs
     #+begin_src emacs-lisp
       (use-package spaceline
	 :init
	 (setq powerline-default-separator 'arrow-fade)
	 :config
	 (require 'spaceline-config)
	 (spaceline-spacemacs-theme))
     #+end_src
**** Font
     Use a nice, monospaced font
     #+begin_src emacs-lisp
       (set-face-attribute 'default nil
			   :family "Fira Mono for Powerline"		    
       ;;;                 :family "Droid Sans Mono"
       ;;;                 :family "Inconsolata-g for Powerline"
       ;;;                 :family "Source Code Pro for Powerline"		    
			   :height 110
			   :weight 'normal
			   :width 'normal)
     #+end_src
** Mastering emacs
   Tips and tricks taken from Mickey Petersen's 'Mastering Emacs'

   Sort apropos results by relevancy
   #+begin_src emacs-lisp
     (setq apropos-sort-by-scores t)
   #+end_src

   Enable ido mode and use flex matching
   #+begin_src emacs-lisp
     (ido-mode 1)
     (setq ido-everywhere t)
     (setq ido-enable-flex-matching t)
   #+end_src

   Use winner-mode to retrieve past window configurations
   #+begin_src emacs-lisp
     (setq winner-mode t)
   #+end_src

   Use ace-window for really fast window selection
   #+begin_src emacs-lisp
     (use-package ace-window
       :config
       (global-set-key (kbd "M-o") 'ace-window)
       (setq aw-keys '(?n ?r ?t ?d ?u ?i ?a ?e))
       (setq aw-ignore-current t))
   #+end_src

   Use windmove to change windows by S-<arrow> (see [[https://orgmode.org/manual/Conflicts.html][link]] for more information)
   #+begin_src emacs-lisp
     (windmove-default-keybindings)
     ;; Make windmove work in Org mode:
     (add-hook 'org-shiftup-final-hook 'windmove-up)
     (add-hook 'org-shiftleft-final-hook 'windmove-left)
     (add-hook 'org-shiftdown-final-hook 'windmove-down)
     (add-hook 'org-shiftright-final-hook 'windmove-right)
   #+end_src

   Use actual visual lines, not logical lines
   #+begin_src emacs-lisp
     (setq global-visual-line-mode t)
   #+end_src

   Use 'M-i' for 'M-x imenu'
   #+begin_src emacs-lisp
     (global-set-key (kbd "M-i") 'imenu)
   #+end_src

    of 'C-w' to kill whole line, if no region is active
   #+begin_src emacs-lisp
     (use-package whole-line-or-region
       :config
       (whole-line-or-region-global-mode 1))
   #+end_src
   
   Use Hippie Expand for text completion ('M-/')
   #+begin_src emacs-lisp
     (global-set-key [remap dabbrev-expand] 'hippie-expand)
   #+end_src

   Do not use tabs, I want 4 spaces
   #+begin_src emacs-lisp
     (setq indent-tabs-mode nil)
     (setq tab-width 4)
   #+end_src

   If a buffer changed on disk, it should be automatically refreshed
   #+begin_src emacs-lisp
     (global-auto-revert-mode 1)
   #+end_src

   Function to edit current buffer as root user and map it to <f12>
   #+begin_src emacs-lisp
     (defun mng-sudo ()
       "Use TRAMP to edit current buffer as root user"
       (interactive)
       (when buffer-file-name
	 (find-alternate-file
	  (concat "/sudo:root@localhost:"
		  buffer-file-name))))
     (global-set-key (kbd "<f12>") 'mng-sudo)
   #+end_src

   Enable dired-x by default
   #+begin_src emacs-lisp
     (require 'dired-x)
   #+end_src
** org-mode
   Install latest, stable org-mode
   #+begin_src emacs-lisp
     (use-package org
       :mode (("\\.\\(org\\|org_archive\\)$" . org-mode))
       :ensure org-plus-contrib)
   #+end_src
   Add an easy template for emacs-lisp babel block (see [[https://emacs.stackexchange.com/questions/46795/is-it-possible-to-add-templates-other-than-begin-end-to-org-structure-temp][link]])
   #+begin_src emacs-lisp
     (require 'org-tempo)
     (add-to-list 'org-structure-template-alist '("el" . "src emacs-lisp"))
   #+end_src
*** LaTeX support
    Install CDLaTeX. Also install auctex, CDLaTeX requires texmathp.el
    #+begin_src emacs-lisp
      (use-package auctex
	:defer t)
      (use-package cdlatex)
    #+end_src
    Setup org-mode hook to load cdlatex
    #+begin_src emacs-lisp
      (add-hook 'org-mode-hook 'turn-on-org-cdlatex)
    #+end_src
** Programming
    Install magit, the best git integration ever
    #+begin_src emacs-lisp
      (use-package magit
	:config
	(global-set-key (kbd "C-x g") 'magit-status))
    #+end_src
    Install a good debugger
    #+begin_src emacs-lisp
      (use-package realgud)
    #+end_src
    Font-locking for CMakelists
    #+begin_src emacs-lisp
      (use-package cmake-mode)
    #+end_src
    Setup elpy
    #+begin_src emacs-lisp
      (use-package elpy
	:config
	(elpy-enable))
    #+end_src
    Use EIN to interface with jupyter notebooks
    #+begin_src emacs-lisp
      (use-package ein
	:config
	(require 'ein-notebook)
	(require 'ein-subpackages))
    #+end_src
** Packages
   Which-key for easy exploration
   #+begin_src emacs-lisp
     (use-package which-key
       :config
       (which-key-mode))
   #+end_src   
   Setup ledger
   #+begin_src emacs-lisp
     (use-package ledger-mode
       :mode "\\.ledger\\'"
       :config
       (setq ledger-post-amount-alignment-at :decimal
	     ledger-post-amount-alignment-column 60)
       (use-package flycheck-ledger)
       (add-to-list 'ledger-reports
		    '("cleared_bal" "%(binary) -f %(ledger-file) bal --cleared")))
   #+end_src


